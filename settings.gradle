pluginManagement {
    repositories {
        maven { url = "https://maven.fabricmc.net/" }
        maven { url = "https://maven.architectury.dev/" }
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://maven.quiltmc.org/repository/release" }
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositories {
         mavenCentral()
    }
    versionCatalogs {
        // Minecraft Version
        def minecraftVersion = "1.19.4"

        // Mod Dependencies Versions

        // Fabric
        def fabricLoaderVersion = "0.14.19" // https://fabricmc.net/develop/
        def fabricApiVersion = "0.81.1" // https://fabricmc.net/develop/
        def sodiumVersion = "mc1.19.4-0.4.10"
        def irisVersion = "1.6.4+1.19.4"

        // Forge
        def forgeVersion = "45.0.64"
        def rubidiumVersion = "0.6.4"
        def oculusVersion = "1.19.4-1.5.2"

        // Libs
        def quiltMappingsVersion = "9"  // https://lambdaurora.dev/tools/import_quilt.html
        def parchmentVersion = "1.19.3:2023.03.12" // https://parchmentmc.org/docs/getting-started
        def shadowVersion = "7.1.2"
        def architecturyPluginVersion = "3.4-SNAPSHOT"
        def architecturyLoomVersion = "1.0-SNAPSHOT"
        def quiltFlowerVersion = "1.+"
        def macheteVersion = "1.+"
        def ldLibVersion = "1.0.13"

        fabric {
            def parchment = version("parchment", parchmentVersion)
            library("parchment", "org.parchmentmc.data", "parchment-${minecraftVersion}").versionRef(parchment)

            def fabricLoader = version("fabricLoader", fabricLoaderVersion)
            library("fabricLoader", "net.fabricmc", "fabric-loader").versionRef(fabricLoader)

            def fabricApi = version("fabricApi", "${fabricApiVersion}+${minecraftVersion}")
            library("fabricApi", "net.fabricmc.fabric-api", "fabric-api").versionRef(fabricApi)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-common", "com.lowdragmc.ldlib", "ldlib-common-${minecraftVersion}").versionRef(ldLib)
            library("ldlib-fabric", "com.lowdragmc.ldlib", "ldlib-fabric-${minecraftVersion}").versionRef(ldLib)

            def sodium = version("sodium", sodiumVersion)
            library("sodium", "maven.modrinth", "sodium").versionRef(sodium)

            def iris = version("iris", irisVersion)
            library("iris", "maven.modrinth", "iris").versionRef(iris)
        }

        forge {
            version("forgeShortVersion", forgeVersion)
            def minecraftForge = version("minecratfForge", "${minecraftVersion}-${forgeVersion}")
            library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-forge", "com.lowdragmc.ldlib", "ldlib-forge-${minecraftVersion}").versionRef(ldLib)

            def rubidium = version("rubidium", rubidiumVersion)
            library("rubidium", "maven.modrinth", "rubidium").versionRef(rubidium)

            def oculus = version("oculus", oculusVersion)
            library("oculus", "maven.modrinth", "oculus").versionRef(oculus)
        }

        libs {
            version("quiltMappings", quiltMappingsVersion)
            version("parchment", parchmentVersion)

            def minecraft = version("minecraft", minecraftVersion)
            library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

            def shadow = version("shadow", shadowVersion)
            plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

            def architecturyPlugin = version("architectury", architecturyPluginVersion)
            plugin("architectury", "architectury-plugin").versionRef(architecturyPlugin)

            def architecturyLoom = version("architectury-loom", architecturyLoomVersion)
            plugin("architectury-loom", "dev.architectury.loom").versionRef(architecturyLoom)

            def quiltFlower = version("quiltFlower", quiltFlowerVersion)
            plugin("quiltFlower", "io.github.juuxel.loom-quiltflower").versionRef(quiltFlower)

            def machete = version("machete", macheteVersion)
            plugin("machete", "io.github.p03w.machete").versionRef(machete)
        }
    }
}

include("${mod_id}-common")
include("${mod_id}-fabric")
include("${mod_id}-forge")

project(":${mod_id}-common").setProjectDir(new File("common"))
project(":${mod_id}-forge").setProjectDir(new File("forge"))
project(":${mod_id}-fabric").setProjectDir(new File("fabric"))

rootProject.name = "${mod_name}"
